<mah:MetroWindow x:Class="LuckyCurrency.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"   
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fc="clr-namespace:FancyCandles;assembly=FancyCandles"
        xmlns:vm="clr-namespace:LuckyCurrency.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:converter="clr-namespace:LuckyCurrency.Converter"
        xmlns:local="clr-namespace:LuckyCurrency"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:cmd="clr-namespace:LuckyCurrency.Infrastructure.Commands"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        WindowStartupLocation="CenterScreen"
        Height="550" Width="1100"
        MinHeight="550" MinWidth="1100">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=LoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Path=ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel Margin="3">
        
        <Grid DockPanel.Dock="Left"
              Width="85">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <mah:SplitButton Grid.Row="1" 
                             Margin="0 0 3 0"
                             SelectedValue="{Binding Path=CurrentSymbol}"
                             DisplayMemberPath="alias"
                             ItemsSource="{Binding Symbols}"
                             SelectedIndex="7"
                             Orientation="Vertical">
                <mah:SplitButton.Icon>
                    <fa:ImageAwesome Icon="BarChartOutline" Foreground="{Binding ForegroundColorTheme}" Width="18" Height="18"/>
                </mah:SplitButton.Icon>
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=ChangeSymbolCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </mah:SplitButton>

            <mah:SplitButton Grid.Row="2" 
                             Margin="0 3 3 0"
                             SelectedValue="{Binding SelectedTimeframe, Converter={converter:TimeFrameConvert}}"
                             ItemsSource="{Binding TimeFrames}"
                             SelectedIndex="1"
                             Orientation="Vertical">

                <mah:SplitButton.Icon>
                    <fa:ImageAwesome Icon="ClockOutline" Foreground="{Binding ForegroundColorTheme}" Width="18" Height="18"/>
                </mah:SplitButton.Icon>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=ChangeTimeframeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </mah:SplitButton>

            <StackPanel Grid.Row="3" 
                        VerticalAlignment="Bottom">
                <Button Margin="0 0 0 3"
                        Command="{Binding ChangeThemeCommand}">
                    <Button.Content>
                        <StackPanel>
                            <fa:ImageAwesome Foreground="{Binding ForegroundColorTheme}" Width="18" Height="18" Style="{DynamicResource ChangeTheme}"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Command="{Binding SwitchToLoginCommand}">
                    <StackPanel>
                        <fa:ImageAwesome Icon="SignOut" Foreground="{Binding ForegroundColorTheme}" Width="18" Height="18"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="210"/>
            </Grid.ColumnDefinitions>

            <fc:CandleChart Grid.Column="0" Grid.Row="0"
                            CandlesSource="{Binding Path=Candles}"
                            ChartAreaBackground="{Binding BackgroundColorTheme}"
                            AxisTickColor="{Binding ForegroundColorTheme}"
                            IsHorizontalGridlinesEnabled="False"
                            IsVerticalGridlinesEnabled="False"
                            HideMinorVerticalGridlines="True">

                <fc:CandleChart.CrossLinesBrush>
                    <SolidColorBrush Color="#707275" Opacity="0.4"/>
                </fc:CandleChart.CrossLinesBrush>

                <fc:CandleChart.LegendForeground>
                    <SolidColorBrush Color="#707275" Opacity="0.4"/>
                </fc:CandleChart.LegendForeground>
                    
                <fc:CandleChart.LegendText>
                    <MultiBinding StringFormat="{}{0}/{1}">
                        <Binding Path="CurrentSymbol.alias"/>
                        <Binding Path="SelectedTimeframe"/>
                    </MultiBinding>
                </fc:CandleChart.LegendText>
            </fc:CandleChart>

            <Grid x:Name="OrderBook" 
                  Grid.Column="1" Grid.Row="0"
                  Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Grid.Row="0" Grid.ColumnSpan="2"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                    <fa:ImageAwesome Height="8" Margin="0,0,8,0" Style="{StaticResource BuyOrSellLastTrade}"/>
                    <TextBlock FontWeight="Bold">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                <Binding Path="LastTrade.Price"/>
                                <Binding Path="CurrentSymbol.price_scale"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                <DataGrid x:Name="DataGrid"
                          Grid.Row="1" Grid.Column="0"
                          ItemsSource="{Binding Asks}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=SelectedPriceCommand}" CommandParameter="{Binding ., RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns>
                        <DataGridTextColumn Foreground="Red" Header="Price" Width="auto">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Price"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Qty" Width="*"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderRight}"
                                            CellStyle="{StaticResource DataGridCellRight}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Quantity"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="1" Grid.Column="1"
                          ItemsSource="{Binding Bids}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=SelectedPriceCommand}" CommandParameter="{Binding ., RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns>
                        <DataGridTextColumn Foreground="Green" Header="Price">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Price"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Qty" Width="*"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderRight}"
                                            CellStyle="{StaticResource DataGridCellRight}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Quantity"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="2" Grid.ColumnSpan="2"
                          ItemsSource="{Binding Trades}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn ElementStyle="{StaticResource BuyOrSellOrder}" Header="Price" Width="auto">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Price"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Qty" Width="*"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderRight}"
                                            CellStyle="{StaticResource DataGridCellRight}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                    <Binding Path="Size"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        
                        <DataGridTextColumn Header="Time" Width="*" Binding="{Binding Path=Timestamp, StringFormat={}{0:HH:mm:ss}}"
                                            HeaderStyle="{StaticResource DataGridColumnHeaderRight}"
                                            CellStyle="{StaticResource DataGridCellRight}"/>
                    </DataGrid.Columns>
                </DataGrid>
                
            </Grid>

            <Grid x:Name="Balance" 
                  Grid.Row="1" Grid.Column="2">
                <GroupBox Header="Balance">
                    <StackPanel>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:0.0000} {1}">
                                        <Binding Path="Balance.WalletBalance"/>
                                        <Binding Path="CurrentSymbol.quote_currency"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock>Wallet Bal.</TextBlock>
                        </DockPanel>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:0.0000} {1}">
                                        <Binding Path="Balance.AvailableBalance"/>
                                        <Binding Path="CurrentSymbol.quote_currency"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock>Available Bal.</TextBlock>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
            </Grid>

            <TabControl x:Name="PositionsAndOrders" 
                        Grid.Row="1" Grid.Column="0"
                        Grid.ColumnSpan="2">
                <TabItem Header="Positions"
                         Margin="0 10 0 0">
                    <DataGrid ItemsSource="{Binding Positions}"
                              AutoGenerateColumns="False"
                              IsReadOnly="True">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Contracts" Width="*" Binding="{Binding Path=Symbol}" FontWeight="Bold" ElementStyle="{StaticResource LongOrShortOrder}"/>
                            <DataGridTextColumn Header="Qty" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Size"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Side" Width="auto" Binding="{Binding Path=Side}" FontWeight="Bold" ElementStyle="{StaticResource LongOrShortOrder}"/>
                            <DataGridTextColumn Header="Value" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0:0.0000} {1}">
                                    <Binding Path="Position_value"/>
                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.quote_currency"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Entry Price" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Entry_price"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Liq. Price" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Liq_price"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Action" Width="auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=DataContext.ClosePositionCommand}" CommandParameter="{Binding}">Close</Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem x:Name="ActiveOrders">
                    <TabItem.Header>
                        <mah:Badged BadgePlacementMode="TopRight"
                                    Badge="{Binding CountOrder}"
                                    Margin="0 15 7 0">
                            
                            <TextBlock Text="Active Orders"
                                       Margin="0 -5 0 0"
                                       Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:ContentControlEx}}, Path=(TextElement.Foreground)}"
                                       FontSize="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:ContentControlEx}}, Path=(TextElement.FontSize)}"/>
                        </mah:Badged>
                    </TabItem.Header>
                    <DataGrid ItemsSource="{Binding Orders}"
                              AutoGenerateColumns="False"
                              IsReadOnly="True">
                        
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Contracts" Width="*" Binding="{Binding Path=Symbol}" FontWeight="Bold" ElementStyle="{StaticResource BuyOrSellOrder}" />
                            <DataGridTextColumn Header="Qty" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Qty"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Side" Width="auto" Binding="{Binding Path=Side}" FontWeight="Bold" ElementStyle="{StaticResource BuyOrSellOrder}"/>
                            <DataGridTextColumn Header="Order Price" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Price"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Order Type" Width="*" Binding="{Binding Path=Order_type}"/>
                            <DataGridTextColumn Header="Order Time" Width="120" Binding="{Binding Path=Create_time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
                            <DataGridTemplateColumn Header="Action" Width="auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=DataContext.CancelOrderCommand}" CommandParameter="{Binding}">Cancel</Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem Header="Closed P&amp;L"
                         Margin="0 10 0 0">
                    <DataGrid ItemsSource="{Binding PositionsClosePnl}"
                              AutoGenerateColumns="False"
                              IsReadOnly="True">
                        
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Contracts" Width="*" Binding="{Binding Path=Symbol}" FontWeight="Bold" ElementStyle="{StaticResource LongOrShortOrder}"/>
                            <DataGridTextColumn Header="Qty" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Qty"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.lot_size_filter.qty_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Side" Width="auto" Binding="{Binding Path=Side}" FontWeight="Bold" ElementStyle="{StaticResource LongOrShortOrder}"/>
                            <DataGridTextColumn Header="Entry Price" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Avg_entry_price"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Exit Price" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource SimbolsAfterCommaConverter}">
                                        <Binding Path="Avg_exit_price"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.price_scale"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Closed P&amp;L" Width="*">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0:0.0000} {1}">
                                        <Binding Path="Closed_pnl"/>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGrid}"
                                             Path="DataContext.CurrentSymbol.quote_currency"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Trade Time" Width="auto" Binding="{Binding Path=Created_at, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>

            <TabControl x:Name="CreateOrder" 
                        Grid.Row="0" Grid.Column="2">
                <TabItem Header="Open" Width="105">
                    <Grid>
                        <TabControl>
                            <TabItem Header="Limit" Width="100">
                                <StackPanel Margin="3">
                                    <DockPanel Height="30"
                                               Margin="3">
                                        <mah:NumericUpDown DockPanel.Dock="Right"
                                                           Value="{Binding PriceOrder}"
                                                           Minimum="{Binding CurrentSymbol.price_filter.min_price}"
                                                           Maximum="{Binding CurrentSymbol.price_filter.max_price}"
                                                           Interval="{Binding CurrentSymbol.price_filter.tick_size}"
                                                           StringFormat="{Binding CurrentSymbol.price_scale, StringFormat={}F{0}}"
                                                           SnapToMultipleOfInterval="True"
                                                           Style="{StaticResource NumericUpDown}">
                                            
                                        </mah:NumericUpDown>
                                        <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Price Order</TextBlock>
                                    </DockPanel>
                                    <DockPanel Height="30"
                                               Margin="3">
                                        <mah:NumericUpDown DockPanel.Dock="Right"
                                                           Value="{Binding QtyOrder}"
                                                           Minimum="{Binding CurrentSymbol.lot_size_filter.min_trading_qty}"
                                                           Maximum="{Binding CurrentSymbol.lot_size_filter.max_trading_qty}"
                                                           Interval="{Binding CurrentSymbol.lot_size_filter.qty_step}"
                                                           StringFormat="{Binding CurrentSymbol.lot_size_filter.qty_scale, StringFormat={}F{0}}"
                                                           Style="{StaticResource NumericUpDown}">
                                        </mah:NumericUpDown>
                                        <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Qty</TextBlock>
                                    </DockPanel>
                                    <DockPanel Height="25"
                                               Margin="3">
                                        <TextBlock DockPanel.Dock="Right" 
                                                   VerticalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource OrderValueConverter}">
                                                    <Binding Path="PriceOrder"/>
                                                    <Binding Path="QtyOrder"/>
                                                    <Binding Path="CurrentSymbol.quote_currency"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock VerticalAlignment="Center">Order Value</TextBlock>
                                    </DockPanel>
                                    <UniformGrid Margin="3 20 3 3">
                                        <Button Command="{Binding CreateOpenLimitOrderCommand}" CommandParameter="Buy"
                                                Margin="3"
                                                Content="Open Long"
                                                Template="{DynamicResource ButtonBuy}"/>
                                        <Button Command="{Binding CreateOpenLimitOrderCommand}" CommandParameter="Sell"
                                                Margin="3" 
                                                Content="Open Short"
                                                Template="{DynamicResource ButtonSell}"/>
                                    </UniformGrid>
                                </StackPanel>
                            </TabItem>
                            <TabItem Header="Market" Width="100">
                                <StackPanel>
                                    <DockPanel Height="30"
                                               Margin="3">
                                        <mah:NumericUpDown DockPanel.Dock="Right"
                                                           Value="{Binding QtyOrder}"
                                                           Minimum="{Binding CurrentSymbol.lot_size_filter.min_trading_qty}"
                                                           Maximum="{Binding CurrentSymbol.lot_size_filter.max_trading_qty}"
                                                           Interval="{Binding CurrentSymbol.lot_size_filter.qty_step}"
                                                           StringFormat="{Binding CurrentSymbol.lot_size_filter.qty_scale, StringFormat={}F{0}}"
                                                           Style="{StaticResource NumericUpDown}">
                                        </mah:NumericUpDown>
                                        <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Qty</TextBlock>
                                    </DockPanel>
                                    <DockPanel Height="25"
                                               Margin="3">
                                        <TextBlock DockPanel.Dock="Right" 
                                                   VerticalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource OrderValueConverter}">
                                                    <Binding Path="LastTrade.Price"/>
                                                    <Binding Path="QtyOrder"/>
                                                    <Binding Path="CurrentSymbol.quote_currency"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock VerticalAlignment="Center">Order Value</TextBlock>
                                    </DockPanel>
                                    <UniformGrid Margin="3 20 3 3">
                                        <Button Command="{Binding CreateOpenMarketOrderCommand}" CommandParameter="Buy"
                                                Margin="3"
                                                Content="Open Long"
                                                Template="{DynamicResource ButtonBuy}"/>
                                        <Button Command="{Binding CreateOpenMarketOrderCommand}" CommandParameter="Sell"
                                                Margin="3" 
                                                Content="Open Short"
                                                Template="{DynamicResource ButtonSell}"/>
                                    </UniformGrid>
                                </StackPanel>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Close"  Width="105">
                    <TabControl>
                        <TabItem Header="Limit" Width="100">
                            <StackPanel>
                                <DockPanel Height="30"
                                           Margin="3">
                                    <mah:NumericUpDown DockPanel.Dock="Right"
                                                       Value="{Binding PriceOrder}"
                                                       Minimum="{Binding CurrentSymbol.price_filter.min_price}"
                                                       Maximum="{Binding CurrentSymbol.price_filter.max_price}"
                                                       Interval="{Binding CurrentSymbol.price_filter.tick_size}"
                                                       StringFormat="{Binding CurrentSymbol.price_scale, StringFormat={}F{0}}"
                                                       SnapToMultipleOfInterval="True"
                                                       Style="{StaticResource NumericUpDown}">
                                    </mah:NumericUpDown>
                                    <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Price Order</TextBlock>
                                </DockPanel>
                                <DockPanel Height="30"
                                           Margin="3">
                                    <mah:NumericUpDown DockPanel.Dock="Right"
                                                       Value="{Binding QtyOrder}"
                                                       Minimum="{Binding CurrentSymbol.lot_size_filter.min_trading_qty}"
                                                       Maximum="{Binding CurrentSymbol.lot_size_filter.max_trading_qty}"
                                                       Interval="{Binding CurrentSymbol.lot_size_filter.qty_step}"
                                                       StringFormat="{Binding CurrentSymbol.lot_size_filter.qty_scale, StringFormat={}F{0}}"
                                                       Style="{StaticResource NumericUpDown}">
                                    </mah:NumericUpDown>
                                    <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Qty</TextBlock>
                                </DockPanel>
                                <DockPanel Height="25"
                                           Margin="3">
                                    <TextBlock DockPanel.Dock="Right" 
                                                   VerticalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource OrderValueConverter}">
                                                <Binding Path="PriceOrder"/>
                                                <Binding Path="QtyOrder"/>
                                                <Binding Path="CurrentSymbol.quote_currency"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock VerticalAlignment="Center">Order Value</TextBlock>
                                </DockPanel>
                                <UniformGrid Margin="3 20 3 3">
                                    <Button Command="{Binding CreateCloseLimitOrderCommand}" CommandParameter="Buy"
                                                Margin="3"
                                                Content="Close Short"
                                                Template="{DynamicResource ButtonBuy}"/>
                                    <Button Command="{Binding CreateCloseLimitOrderCommand}" CommandParameter="Sell"
                                                Margin="3" 
                                                Content="Close Long"
                                                Template="{DynamicResource ButtonSell}"/>
                                </UniformGrid>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Market" Width="100">
                            <StackPanel>
                                <DockPanel Height="30"
                                           Margin="3">
                                    <mah:NumericUpDown DockPanel.Dock="Right" 
                                                       Value="{Binding QtyOrder}"
                                                       Minimum="{Binding CurrentSymbol.lot_size_filter.min_trading_qty}"
                                                       Maximum="{Binding CurrentSymbol.lot_size_filter.max_trading_qty}"
                                                       Interval="{Binding CurrentSymbol.lot_size_filter.qty_step}"
                                                       StringFormat="{Binding CurrentSymbol.lot_size_filter.qty_scale, StringFormat={}F{0}}"
                                                       Style="{StaticResource NumericUpDown}">
                                    </mah:NumericUpDown>
                                    <TextBlock DockPanel.Dock="Left"
                                                   VerticalAlignment="Center">Qty</TextBlock>
                                </DockPanel>
                                <DockPanel Height="25"
                                           Margin="3">
                                    <TextBlock DockPanel.Dock="Right" 
                                                   VerticalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource OrderValueConverter}">
                                                <Binding Path="LastTrade.Price"/>
                                                <Binding Path="QtyOrder"/>
                                                <Binding Path="CurrentSymbol.quote_currency"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock VerticalAlignment="Center">Order Value</TextBlock>
                                </DockPanel>
                                <UniformGrid Margin="3 20 3 3">
                                    <Button Command="{Binding CreateCloseMarketOrderCommand}" CommandParameter="Buy"
                                                Margin="3"
                                                Content="Close Short"
                                                Template="{DynamicResource ButtonBuy}"/>
                                    <Button Command="{Binding CreateCloseMarketOrderCommand}" CommandParameter="Sell"
                                                Margin="3" 
                                                Content="Close Long"
                                                Template="{DynamicResource ButtonSell}"/>
                                </UniformGrid>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
            </TabControl>
        </Grid>
        
    </DockPanel>
    
</mah:MetroWindow>
