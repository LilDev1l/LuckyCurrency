<Window x:Class="LuckyCurrency.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fc="clr-namespace:FancyCandles;assembly=FancyCandles"
        xmlns:vm="clr-namespace:LuckyCurrency.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:LuckyCurrency"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=RunWSCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="BuyOrSell">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Trades[0].Side}" Value="Buy">
                    <Setter Property="fa:ImageAwesome.Icon" Value="chevronup"/>
                    <Setter Property="fa:ImageAwesome.Foreground" Value="Green"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Trades[0].Side}" Value="Sell">
                    <Setter Property="fa:ImageAwesome.Icon" Value="chevrondown"/>
                    <Setter Property="fa:ImageAwesome.Foreground" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <ComboBox SelectedItem="{Binding Path=SelectedPair}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=ChangePairOrTimeframeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBoxItem  Content="BTCUSDT" IsSelected="True"/>
                <ComboBoxItem Content="ETHUSDT"/>
            </ComboBox>
            <ComboBox SelectedItem="{Binding Path=SelectedTimeframe}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=ChangePairOrTimeframeCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBoxItem  Content="1"/>
                <ComboBoxItem Content="15" IsSelected="True"/>
            </ComboBox>
        </StackPanel>
        <Grid ShowGridLines="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <fc:CandleChart Grid.Column="0" Grid.Row="0"
                            CandlesSource="{Binding Path=Candles}"
                            ChartAreaBackground="DarkGray"
                            LegendText="{Binding Path=SelectedPair.Content}"/>
            
            <Grid Grid.Column="1" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Grid.ColumnSpan="2"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                    <fa:ImageAwesome Height="12" Margin="0,0,8,0" Style="{StaticResource BuyOrSell}"/>
                    <TextBlock Text="{Binding Trades[0].Price, StringFormat={}{0:0.00}}"/>
                </StackPanel>
                <DataGrid Grid.Row="1" Grid.Column="0"
                          ItemsSource="{Binding Asks}"
                          AutoGenerateColumns="False"
                          
                          IsReadOnly="True"
                          VerticalGridLinesBrush ="DarkGray" AlternatingRowBackground="LightGray">
                    <DataGrid.Columns>
                        <DataGridTextColumn Foreground="Red" Header="Цена" Binding="{Binding Path=Price, StringFormat={}{0:0.00}}"/>
                        <DataGridTextColumn Foreground="Red" Header="Количество" Binding="{Binding Path=Quantity, StringFormat={}{0:0.00}}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="1" Grid.Column="1"
                          ItemsSource="{Binding Bids}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          VerticalGridLinesBrush ="DarkGray" AlternatingRowBackground="LightGray">
                    <DataGrid.Columns>
                        <DataGridTextColumn Foreground="Green" Header="Цена" Binding="{Binding Path=Price, StringFormat={}{0:0.00}}"/>
                        <DataGridTextColumn Foreground="Green" Header="Количество" Binding="{Binding Path=Quantity, StringFormat={}{0:0.00}}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="2" Grid.ColumnSpan="2"
                          ItemsSource="{Binding Trades}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          VerticalGridLinesBrush ="DarkGray" AlternatingRowBackground="LightGray">
                    <DataGrid.Resources>
                        <Style x:Key="BuyOrSell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Side}" Value="Sell">
                                    <Setter Property="DataGridTextColumn.Foreground"  Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Side}" Value="Buy">
                                    <Setter Property="DataGridTextColumn.Foreground"  Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn ElementStyle="{StaticResource BuyOrSell}" Header="Цена" Binding="{Binding Path=Price, StringFormat={}{0:0.00}}"/>
                        <DataGridTextColumn ElementStyle="{StaticResource BuyOrSell}" Header="Количество" Binding="{Binding Path=Size, StringFormat={}{0:0.00}}"/>
                        <DataGridTextColumn ElementStyle="{StaticResource BuyOrSell}" Header="Время" Binding="{Binding Path=Timestamp, StringFormat={}{0:HH:mm:ss}}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="1">
                <GroupBox Header="Balance">
                    <StackPanel>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right"
                                       Text="{Binding Path=Balance.WalletBalance}"/>
                            <TextBlock>Wallet Balance</TextBlock>
                        </DockPanel>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right"
                                       Text="{Binding Path=Balance.AvailableBalance}"/>
                            <TextBlock>Available Balance</TextBlock>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
